            lw          0           1          valN         load n
            lw          0           2          valR         load r
            lw          0           6          AdcbIn       load function
            lw          0           1           one         load 1
            jalr        6           7                      
stop        halt
comInp      sw         5            7            stack        save return address on stack
            add        4            5            5            increment stack pointer add 5 on stack
            sw         5            2            stack        save $2 on stack
            add        4            5            5            increment stack pointer add 5 on stack
            sw         5            1            stack        save $1 on stack
            add        4            5            5            increment stack pointer add 5 on stack
combiIF     beq        1            2            comRt        if r = 0 or n = r jump comRt
            beq        0            2            comRt        
comPop      lw         0            6            neg1      
            add        6            5            5  
            add        6            5            5
            lw         5            7            stack
            jalr       7            0
comRt       add        4            3            3             return           
            
valN        .fill       7
valR        .fill       3
AdcbIn      .fill       comInp
AdcbRt      .fill       comRt
AdcbP       .fill       comPop
one         .fill       1
neg1        .fill       -1
stack       .fill       0                  beginning of stack (value is irrelevant)